@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using AXProductApp.Data
@inject Blazored.LocalStorage.ILocalStorageService _localstorage;
@inject NavigationManager NavManager


{
    <style class="body-style">
        body {
            background-image: linear-gradient(-135deg, rgba(163, 197, 237, 1) 0%, rgba(137, 159, 240, 1) 50%, rgba(199, 156, 232, 1) 100%);
            background-size: autox;
            background-repeat: no-repeat;
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: 'Trebuchet MS', sans-serif;
            font-size: 18px;
            font-weight: 600;
        }
    </style>
    <div class="body">

        <div class="container">

            <div class="data">Data</div>

            <div class="common-box-styles box-1">
                <i class="fas fa-thermometer"></i>
                Temperature
                <div class="gray_box">
                    @Temperature
                </div>
            </div>

            <div class="common-box-styles box-1">
                <i class="fas fa-tint"></i>
                Humidity
                <div class="gray_box">
                    @Humidity
                </div>
            </div>

            <div class="common-box-styles box-1">
                <i class="fas fa-wind"></i>
                Rain
                <div class="gray_box">
                    @isRain
                </div>
            </div>

            <div class="common-box-styles box-2">
                <p> Turn off alarm? </p>
                <div class="marquee-infinite">
                    <div>
                        <h1>secured by MINOS Group </h1>
                        <h1>\ </h1>
                        <h1>secured by MINOS Group </h1>
                        <h1>\ </h1>
                        <h1>secured by MINOS Group </h1>
                        <h1>\ </h1>
                        <h1>secured by MINOS Group </h1>
                        <h1>\ </h1>
                        <h1>secured by MINOS Group </h1>з
                        <h1>\ </h1>
                    </div>
                </div>
            </div>

            <div class="common-box-styles box-3">
                Opened
            </div>
        </div>
    </div>
}

@code {
    private HubConnection? hubConnection;
    private System.Timers.Timer connectionCheckTimer;
    public WindowStatus windowStatus = new WindowStatus();
    string Temperature, ProtectionStatus, Humidity;
    bool isRain;
    bool IsConnected;

    protected override async Task OnInitializedAsync()
    {
        await EstablishConnection();

    }


    public void ShowDataFromWindowStatus(WindowStatus status)
    {
        Temperature = $"{status.Temparature} °C";
        Humidity = $"{status.Humidity} %";
        ProtectionStatus = status.IsProtected;
        isRain = (status.isRain != 0);
    }

    private async Task EstablishConnection()
    {
        hubConnection = new HubConnectionBuilder()
            //.WithUrl(new Uri("http://192.168.4.2:81/client-hub")) // This URL should match your SignalR hub endpoint
            .WithUrl(new Uri("https://localhost:7009/client-hub")) 
            //.WithUrl(new Uri("https://localhost:44324/client-hub")) // This URL should match your SignalR hub endpoint
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<WindowStatus>("ReceiveWindowStatus", (status) =>
        {
            ShowDataFromWindowStatus(status);
            InvokeAsync(StateHasChanged);
        });
        try
        {
            await hubConnection.StartAsync();
            if (hubConnection?.State == HubConnectionState.Connected)
            {


                WindowStatus status = await _localstorage.GetItemAsync<WindowStatus>(nameof(WindowStatus));
                if (status != null)
                {
                    ShowDataFromWindowStatus(status);
                    // тут ловить коли пропало зєднання  з сервером але в кеші є дані (тре буде виводити дані і шо конешн лост)(То Ромцю)
                }
                else
                {
                    throw new System.Net.Http.HttpRequestException();
                }
                Console.WriteLine($"REMOTE STATE {IsConnected}");
                Console.WriteLine("Connection to hub established.");
            }


        }
        catch (System.Net.Http.HttpRequestException)
        {
            WindowStatus status = await _localstorage.GetItemAsync<WindowStatus>(nameof(WindowStatus));
            if (status != null)
            {
                ShowDataFromWindowStatus(status);
                // тут ловить коли пропало зєднання  з сервером але в кеші є дані (тре буде виводити дані і шо конешн лост)(То Ромцю)
            }
            else
            {
                connectionCheckTimer = new System.Timers.Timer();
                connectionCheckTimer.Interval = 5000;
                //connectionCheckTimer.Elapsed += async (sender, e) => await CheckConnection();
                connectionCheckTimer.Start();
                // тут ловить коли пропало зєднання  з сервером і ше й даних нема (то Юри парафія)
            }

        }
        catch (Exception ex)
        {

            Console.WriteLine($"Error establishing connection to hub: {ex.Message}");
        }

    }

}
