@page "/"
@page "/login"
@using AXProductApp.Models
@using AXProductApp.Services
@using AXProductApp.Interfaces
@using System.Diagnostics
@using Newtonsoft.Json;
@using System.IdentityModel.Tokens.Jwt;
@using System.Net

@inject NavigationManager NavigationManager
@inject ILoginService LoginService
@inject NavigationManager Navigation
<style>
    body {
        background-repeat: no-repeat;
        background-attachment: fixed;
        font-family: 'Trebuchet MS', sans-serif;
        background-image: linear-gradient(-135deg, #F7F7F8 0%,#3795BD 50%, #4E31AA 75%, #3A1078 100%);
    }
</style>

<EditForm Model="@userModel" OnValidSubmit="Submit" class="section__login">
    <DataAnnotationsValidator />
    <br />
    <br />

    <h3>Login</h3>
    <div class="section__loging-box" >
        <div class="form-group">
            <label>Email</label>
            <input placeholder="Enter email" type="email" @bind-value="userModel.Email" class="form-control" required>
            <ValidationMessage For="@(() => userModel.Email)" />
        </div>
        <div class="mt-2 form-group">
            <label>Password</label>
            <input placeholder="Enter password" type="password" @bind-value="userModel.Password" class="form-control" required>
            <ValidationMessage For="@(() => userModel.Password)" />
        </div>
    </div>
    <div class="mt-2 text-end">
        <NavLink class="nav-link" href="registration">
            <span class="span-text"> Click here to create a new account? </span>
        </NavLink>
    </div>
    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
        <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
        Sign In
        </button>
    </div>
</EditForm>

@code {
    private UserLoginModel userModel = new UserLoginModel();
    private string _spinnerClass = "";
    private bool _isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        bool isAutoLogginSucess = await LoginService.TryUserAutoLoggingAsync();
        if (isAutoLogginSucess)
            NavigationManager.NavigateTo("/main");
        
        else
            NavigationManager.NavigateTo("/login");
    }

    private async Task Submit()
    {
        
        if (_isSubmitting)
            return;

        _isSubmitting = true;
        _spinnerClass = "spinner-border spinner-border-sm";

        bool isUserAuthenticated = await LoginService.TryAuthenticateUserAsync(userModel);

        if (isUserAuthenticated)
        {
            Navigation.NavigateTo("/main");
        }
        else
        {
            Vibration.Default.Vibrate(3000);
            await App.Current.MainPage.DisplayAlert("Oops", "Incorrect email or password", "O shit,here we go againg");
        }

        _spinnerClass = "";
        _isSubmitting = false;
        Debug.WriteLine(userModel.Email);
    }
}
