@page "/test"
@using FirebaseAdmin
@using FirebaseAdmin.Messaging
@using Google.Apis.Auth.OAuth2
@using Plugin.Firebase.CloudMessaging
@using System.Diagnostics

<button @onclick=GetTokenClicked>Get token</button>
<button @onclick=SendPushClicked>Send</button>


@code
{
    public string Token {get;set;}
    private async void GetTokenClicked()
    {
        try
        {

            await CrossFirebaseCloudMessaging.Current.CheckIfValidAsync();
            var firebaseToken = await CrossFirebaseCloudMessaging.Current.GetTokenAsync();

            if (!string.IsNullOrEmpty(firebaseToken))
            {

                Token = firebaseToken;
                Debug.WriteLine(Token);
                await App.Current.MainPage.DisplayAlert("Here", $"{Token}", "O shit,here we go againg");
            }
            else
            {
                throw new InvalidOperationException("Firebase token could not be retrieved");
            }

        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex.Message);
        }
    }
    private async void SendPushClicked()
    {
        
        var app = FirebaseApp.Create(new AppOptions
        {
            Credential = await GetCredential()
        });
        
        FirebaseMessaging messaging = FirebaseMessaging.GetMessaging(app);
        var message = new Message()
        {
            Token = Token,
            Notification = new Notification { Title = "Hello world!", Body = "It's a message for Android with MAUI"}
    
        };
        Debug.WriteLine(Token);
        var response = await messaging.SendAsync(message);
        Debug.WriteLine(response);
        await App.Current.MainPage.DisplayAlert("Here", $"{response}", "O shit,here we go againg");
    }

    private async Task<GoogleCredential> GetCredential()
    {
        var path = await FileSystem.OpenAppPackageFileAsync("firebase-adminsdk.json");
        return GoogleCredential.FromStream(path);
    }
}